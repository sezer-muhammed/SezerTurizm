# Generated by Django 4.2.5 on 2023-11-20 11:50

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copyright_text', models.CharField(max_length=255)),
                ('copyright_text_tr', models.CharField(max_length=255, null=True)),
                ('copyright_text_ru', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('locale', models.CharField(default='en', help_text='Locale for multi-language support', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Informational',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_tr', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('content_tr', ckeditor.fields.RichTextField(null=True)),
                ('content_ru', ckeditor.fields.RichTextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeadGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_tr', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('description', models.TextField()),
                ('description_tr', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NavbarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_tr', models.CharField(max_length=100, null=True)),
                ('name_ru', models.CharField(max_length=100, null=True)),
                ('link', models.URLField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/')),
                ('in_use', models.BooleanField(default=False)),
                ('version_history', models.JSONField(default=list, help_text='Version history of the brand')),
                ('version_history_tr', models.JSONField(default=list, help_text='Version history of the brand', null=True)),
                ('version_history_ru', models.JSONField(default=list, help_text='Version history of the brand', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_tr', models.CharField(max_length=255, null=True)),
                ('name_ru', models.CharField(max_length=255, null=True)),
                ('link', models.URLField()),
                ('image', models.ImageField(upload_to='sections/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=20)),
                ('description', models.TextField()),
                ('description_tr', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('html_content', models.TextField()),
                ('html_content_tr', models.TextField(null=True)),
                ('html_content_ru', models.TextField(null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0, help_text='Order in which the section appears')),
                ('visibility_rules', models.JSONField(default=dict, help_text='Rules for when the section is visible')),
                ('seo_metadata', models.JSONField(default=dict, help_text='SEO metadata for the section')),
                ('seo_metadata_tr', models.JSONField(default=dict, help_text='SEO metadata for the section', null=True)),
                ('seo_metadata_ru', models.JSONField(default=dict, help_text='SEO metadata for the section', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_tr', models.CharField(max_length=50, null=True)),
                ('name_ru', models.CharField(max_length=50, null=True)),
                ('icon_svg', models.TextField(help_text='SVG content for the icon')),
                ('url_template', models.CharField(help_text="URL template for user-specific pages (e.g., 'https://twitter.com/{}')", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Subsection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_tr', models.CharField(max_length=255, null=True)),
                ('name_ru', models.CharField(max_length=255, null=True)),
                ('link', models.URLField()),
                ('breadcrumb', models.TextField(help_text='Automatically generated breadcrumb navigation')),
                ('breadcrumb_tr', models.TextField(help_text='Automatically generated breadcrumb navigation', null=True)),
                ('breadcrumb_ru', models.TextField(help_text='Automatically generated breadcrumb navigation', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsections', to='AllPageInformations.section')),
            ],
        ),
        migrations.CreateModel(
            name='Subsubsection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_tr', models.CharField(max_length=255, null=True)),
                ('name_ru', models.CharField(max_length=255, null=True)),
                ('link', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subsection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsubsections', to='AllPageInformations.subsection')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('footer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AllPageInformations.basefooter')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AllPageInformations.socialmediaplatform')),
            ],
        ),
        migrations.CreateModel(
            name='LocalAttractions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_tr', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('description', models.TextField()),
                ('description_tr', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('event_date', models.DateField()),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('past', 'Past')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('images', models.ManyToManyField(related_name='local_attractions', to='AllPageInformations.image')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='FooterMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', ckeditor.fields.RichTextField()),
                ('message_tr', ckeditor.fields.RichTextField(null=True)),
                ('message_ru', ckeditor.fields.RichTextField(null=True)),
                ('display_condition', models.JSONField(default=dict, help_text='Conditions for displaying the message')),
                ('footer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='AllPageInformations.basefooter')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerTestimonials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('testimonial', models.TextField()),
                ('testimonial_tr', models.TextField(null=True)),
                ('testimonial_ru', models.TextField(null=True)),
                ('rating', models.PositiveSmallIntegerField(default=5)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('images', models.ManyToManyField(related_name='testimonials', to='AllPageInformations.image')),
            ],
        ),
        migrations.CreateModel(
            name='BrandAwareness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_tr', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('description', models.TextField()),
                ('description_tr', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('slug', models.SlugField(unique=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('images', models.ManyToManyField(related_name='brand_awareness', to='AllPageInformations.image')),
            ],
        ),
        migrations.AddField(
            model_name='basefooter',
            name='social_media',
            field=models.ManyToManyField(through='AllPageInformations.SocialMediaLink', to='AllPageInformations.socialmediaplatform'),
        ),
    ]
